# docker build -t yoursunny/armv6-nfd:20180702 - < resin-rpi-nfd.Dockerfile

FROM resin/rpi-raspbian:stretch AS compile
RUN [ "cross-build-start" ]
RUN apt-get update && \
    apt-get install -qq build-essential dpkg-dev git libboost-all-dev libpcap-dev libsqlite3-dev libssl-dev pkg-config
WORKDIR /root
RUN git clone --depth=1 --recursive https://github.com/named-data/ndn-cxx.git && \
    cd ndn-cxx && \
    ./waf configure && \
    ./waf -j16 && \
    ./waf install && \
    ./waf install --destdir=/target && \
    ldconfig
RUN git clone --depth=1 --recursive https://github.com/named-data/NFD.git && \
    cd NFD && \
    ./waf configure && \
    ./waf -j16 && \
    ./waf install && \
    ./waf install --destdir=/target
RUN git clone --depth=1 --recursive https://github.com/named-data/ndn-tools.git && \
    cd ndn-tools && \
    ./waf configure && \
    ./waf -j16 && \
    ./waf install && \
    ./waf install --destdir=/target
RUN git clone --depth=1 --recursive https://github.com/NDN-Routing/infoedit.git && \
    cd infoedit && \
    make && \
    make install && \
    cp infoedit /target/usr/local/bin/infoedit
RUN find /target -type f | xargs ldd 2>/dev/null | grep /lib/ | awk '{ print $3 }' | sort -u | xargs dpkg -S | cut -d: -f1 | sort -u > /target/deps.txt
RUN [ "cross-build-end" ]

FROM resin/rpi-raspbian:stretch
COPY --from=compile /target /
RUN [ "cross-build-start" ]
RUN apt-get update && apt-get install -qq $(cat /deps.txt) && apt-get clean && rm /deps.txt
RUN [ "cross-build-end" ]
